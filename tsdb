#! /bin/sh
. /lib/init/vars.sh
. /lib/lsb/init-functions
##############################################################################
#Simple start/stop script for OpenTSDB on Ubuntu 14.04 
#Puts process in background and writes to all output to logfile specified
#Assumptions: You have compiled OpenTSDB from source and run 'make install'
#to move certain files certain places.
#See http://opentsdb.net/docs/build/html/installation.html#
#If you don't want to use the TSD_CONF file, just ln -s to one of the standard
#locations specified in install.
#The list of jdk dirs is fairly extensive, and meant so this could potentially
#be used on any system with upstart, but I haven't tested it.
# Author: Anna Claiborne <annac@packetfabric.com>
##############################################################################

#set this argument if the config is not in a standard location
TSD_CONF=/etc/opentsdb/opentsdb.conf

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="OpenTSDB - Time Series Database"
NAME=tsdb
DAEMON=/usr/local/bin/$NAME
DAEMON_ARGS="--config $TSD_CONF"
TSD_START_CMD=tsd
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
TSD_LOG_FILE=/var/log/tsdb/tsdb.log
VERBOSE="yes"
JDK_DIRS="/usr/lib/jvm/java-8-oracle /usr/lib/jvm/java-8-openjdk /usr/lib/jvm/java-7-oracle /usr/lib/jvm/java-7-openjdk \
   /usr/lib/jvm/java-7-openjdk-amd64/ /usr/lib/jvm/java-7-openjdk-i386/ \
   /usr/lib/jvm/java-6-sun /usr/lib/jvm/java-6-openjdk \
   /usr/lib/jvm/java-6-openjdk-amd64 /usr/lib/jvm/java-6-openjdk-i386 \
   /usr/lib/jvm/default-java"

# Look for the right JVM to use
for jdir in $JDK_DIRS; do
  if [ -r "$jdir/bin/java" -a -z "${JAVA_HOME}" ]; then
    JAVA_HOME="$jdir"
  fi
done

export JAVA_HOME

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started

	# Read configuration variable file if it is present
	if [ -r $TSD_CONF ]; then
	    echo "Using config file: $TSD_CONF"
	else
	    echo "Config file $TSD_CONF not found"
	fi

	start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON $TSD_START_CMD --test > /dev/null \
		|| return 1

	start-stop-daemon --start --quiet \
	 --make-pidfile --pidfile $PIDFILE --background       \
	 --startas /bin/bash -- -c "exec $DAEMON $TSD_START_CMD $DAEMON_ARGS >> $TSD_LOG_FILE 2>&1" \
		|| return 2
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	start-stop-daemon --stop --retry=TERM/30/KILL/5 --pidfile $PIDFILE
	RETVAL="$?"
	[ "$RETVAL" = 2 ] && return 2

	#remove pidfile
	rm -f $PIDFILE
	return "$RETVAL"
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() {
	start-stop-daemon --stop --signal 1 --quiet --pidfile $PIDFILE --name $NAME
	return 0
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  status)
	status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
	;;
  reload)
	log_daemon_msg "Reloading $DESC" "$NAME"
	do_reload
	log_end_msg $?
	;;
  restart)
	#
	# If the "reload" option is implemented then remove the
	# 'force-reload' alias
	#
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
		# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|reload}" >&2
	exit 3
	;;
esac

:
